package tests;import org.testng.Assert;import org.testng.annotations.DataProvider;import org.testng.annotations.Test;import pages.KinoHomePage;public class KinoSearchFieldNegativeTest extends TestInit {    @DataProvider(parallel = true)    public Object[][] searchInvalidText() {        return new Object[][]{                {"zdgsfgdfhjr"}//                {"dvscv562cvv"}//                {"2565465656566"},//                {"@@@@"}, {"........"}, {"%%%%%%"}, {"******"}, {"}}}}}}"}, {")))))"}, {"((((("}, {"!!!!!"},//                {"+++++"}, {"-----"}, {"____"},//                {"$$$$"}, {"#####"}, {"&&&&&"}, {"^^^^^"}, {">>>>>"}, {"<<<<"}, {";;;;;"}, {":::::"}, {"  "},//                {"====="}, {",,,,,,,"}, {""}        };    }    @Test(dataProvider = "searchInvalidText")    public void Test1(String invalidText) throws InterruptedException {        String expextedTextBadSearchTitle = "Фільм не знайдено";        KinoHomePage kinoHomePage = new KinoHomePage(getDriver());        kinoHomePage.openKino()                .inputProductInSearchField(invalidText);//        Thread.sleep(5);//        String actualTextBadSearchTitle = kinoHomePage.getbadSearchTitleText();//        Assert.assertEquals(actualTextBadSearchTitle,(expextedTextBadSearchTitle));        kinoHomePage.clickSubmitBtn();//        System.out.println(expextedTextBadSearchTitle);//        System.out.println(productPage.getTextBadSearchTitle());    }}