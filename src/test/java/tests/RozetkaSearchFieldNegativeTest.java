package tests;import org.testng.Assert;import org.testng.annotations.DataProvider;import org.testng.annotations.Test;import pages.RozetkaHomePage;import pages.RozetkaProductPage;public class RozetkaSearchFieldNegativeTest extends TestInit {    @DataProvider(parallel = true)    public Object[][] searchInvalidText() {        return new Object[][]{                {"zdgsfgdfhjr"}//                {"dvscv562cvv"}//                {"2565465656566"},//                {"@@@@"}, {"........"}, {"%%%%%%"}, {"******"}, {"}}}}}}"}, {")))))"}, {"((((("}, {"!!!!!"},//                {"+++++"}, {"-----"}, {"____"},//                {"$$$$"}, {"#####"}, {"&&&&&"}, {"^^^^^"}, {">>>>>"}, {"<<<<"}, {";;;;;"}, {":::::"}, {"  "},//                {"====="}, {",,,,,,,"}, {""}        };    }    @Test(dataProvider = "searchInvalidText")    public void Test1(String invalidText) {        String expextedTextBadSearchTitle = "По запросу " + "\"" + invalidText + "\"" + " ничего не найдено :(";        RozetkaHomePage rozetkaHomePage = new RozetkaHomePage(getDriver());        rozetkaHomePage.openRozetka()                .inputProductInSearchField(invalidText);        RozetkaProductPage rozetkaProductPage = new RozetkaProductPage(getDriver());        String actualTextBadSearchTitle = rozetkaProductPage.getTextBadSearchTitle();//        System.out.println(expextedTextBadSearchTitle);//        System.out.println(productPage.getTextBadSearchTitle());        Assert.assertEquals(actualTextBadSearchTitle,(expextedTextBadSearchTitle));    }}