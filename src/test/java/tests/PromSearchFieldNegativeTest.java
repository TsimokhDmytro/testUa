package tests;import pages.PromHomePage;import pages.PromProductPage;import org.testng.Assert;import org.testng.annotations.DataProvider;import org.testng.annotations.Test;public class PromSearchFieldNegativeTest extends TestInit {    @DataProvider(parallel = true)    public Object[][] searchInvalidText() {        return new Object[][]{                {"zdgsfgdfhjr"}, {"dvscv562cvv"},                {"2565465656566"},                {"@@@@"}, {"........"}, {"%%%%%%"}, {"******"}, {"}}}}}}"}, {")))))"}, {"((((("}, {"!!!!!"},                {"+++++"}, {"-----"}, {"____"},                {"$$$$"}, {"#####"}, {"&&&&&"}, {"^^^^^"}, {">>>>>"}, {"<<<<"}, {";;;;;"}, {":::::"}, {"  "},                {"====="}, {",,,,,,,"}, {""}        };    }    @Test(dataProvider = "searchInvalidText")    public void Test1(String invalidText) {        String expextedTextBadSearchTitle = "На жаль, по запиту " + "\"" + invalidText + "\"" + " ми нічого не знайшли";        PromHomePage homePage = new PromHomePage(getDriver());        homePage.openPromUa()                .inputProductInSearchField(invalidText);        PromProductPage productPage = new PromProductPage(getDriver());        String actualTextBadSearchTitle = productPage.getTextBadSearchTitle();        System.out.println(expextedTextBadSearchTitle);        System.out.println(productPage.getTextBadSearchTitle());        Assert.assertEquals(actualTextBadSearchTitle,(expextedTextBadSearchTitle));    }}